spring.application.name=splitit
# Server settings
server.port=8080
spring.thymeleaf.encoding=UTF-8

# Base URL
app.base-url=http://localhost

spring.servlet.multipart.enabled=true

#H2 settings
spring.h2.console.enabled=true
spring.h2.console.path=/h2
#spring.h2.console.settings.trace=true
spring.datasource.driverClassName=org.h2.Driver
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
# H2 in-memory database
spring.datasource.url=jdbc:h2:file:~/g11splitit;DB_CLOSE_ON_EXIT=FALSE
# Alternatively, you can use a database persisted on the filesystem #spring.datasource.url=jdbc:h2:file:~/isst
# Updates the database schema when the application starts
spring.jpa.defer-datasource-initialization=true
spring.jpa.hibernate.ddl-auto=update

# Default database user and password
spring.datasource.username=sa
spring.datasource.password=

# Google OAuth2 configuration
spring.security.oauth2.client.registration.google.client-id=
spring.security.oauth2.client.registration.google.client-secret=
spring.security.oauth2.client.registration.google.scope=profile,email
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/google
spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.google.client-name=Google
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=email
